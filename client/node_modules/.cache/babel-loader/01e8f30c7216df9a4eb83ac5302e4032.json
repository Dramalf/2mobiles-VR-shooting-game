{"ast":null,"code":"import { PerspectiveCamera, Scene, WebGLRenderer, Clock, Raycaster, PMREMGenerator, UnsignedByteType, LinearToneMapping } from \"three\";\nimport Stats from 'three/examples/jsm/libs/stats.module';\nimport { FirstPersonControls } from 'three/examples/jsm/controls/FirstPersonControls';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader';\nimport { VRButton } from 'three/examples/jsm/webxr/VRButton.js';\nimport { LightsList } from './Tlights';\nimport { helperList } from \"./THelper\";\nexport class TEngine {\n  constructor(dom) {\n    this.dom = void 0;\n    this.renderer = void 0;\n    this.mixer = void 0;\n    this.pmremGenerator = void 0;\n    this.scene = void 0;\n    this.raycaster = void 0;\n    this.camera = void 0;\n    this.clock = void 0;\n    this.controls = void 0;\n    this.model = void 0;\n    this.heart = void 0;\n    this.newEnterIndex = 0;\n    this.stats = void 0;\n    this.dom = dom;\n    this.renderer = new WebGLRenderer({\n      antialias: true\n    });\n    this.renderer.xr.enabled = true;\n    this.clock = new Clock();\n    this.renderer.shadowMap.enabled = true;\n    this.renderer.toneMapping = LinearToneMapping;\n    this.scene = new Scene();\n    const pmremGenerator = new PMREMGenerator(this.renderer); // 使用hdr作为背景色\n\n    pmremGenerator.compileEquirectangularShader();\n    this.pmremGenerator = pmremGenerator;\n    const scene = this.scene;\n    new RGBELoader().setDataType(UnsignedByteType).load('/texture/autumn_forest_04_1k.hdr', function (texture) {\n      return;\n      const envMap = pmremGenerator.fromEquirectangular(texture).texture;\n      pmremGenerator.dispose();\n      console.log('here');\n      scene.environment = envMap; // 给场景添加环境光效果\n\n      scene.background = envMap; // 给场景添加背景图\n    }, () => {}, e => {\n      console.log('error in load env_texture', e);\n    });\n    this.camera = new PerspectiveCamera(60, dom.offsetWidth / dom.offsetHeight, 0.1, 1000);\n    this.camera.lookAt(1, 0, 0);\n    this.renderer.setSize(dom.offsetWidth, dom.offsetHeight, true); // 初始性能监视器\n\n    const stats = Stats();\n    const statsDom = stats.domElement;\n    this.stats = stats;\n    statsDom.style.position = 'fixed';\n    statsDom.style.top = '0';\n    statsDom.style.right = '5px';\n    statsDom.style.left = 'unset';\n    let controls;\n    controls = new FirstPersonControls(this.camera, this.dom);\n    controls.lookSpeed = 0.2; //鼠标移动查看的速度\n\n    controls.movementSpeed = 20; //相机移动速度\n    // controls.noFly = true;\n\n    controls.constrainVertical = true; //约束垂直\n\n    controls.verticalMin = Math.PI / 2;\n    controls.verticalMax = Math.PI / 2 + 0.0000001;\n    this.controls = controls;\n    const raycaster = new Raycaster();\n    this.raycaster = raycaster;\n\n    const onWindowResize = () => {\n      this.camera.aspect = window.innerWidth / window.innerHeight;\n      this.camera.updateProjectionMatrix();\n      this.renderer.setSize(dom.offsetWidth, dom.offsetHeight, true);\n    };\n\n    window.addEventListener('resize', onWindowResize);\n    this.renderer.setAnimationLoop(() => {\n      this.controls.update(this.clock.getDelta());\n      this.renderer.render(this.scene, this.camera);\n      stats.update();\n    });\n    this.addObject(...helperList);\n    this.addObject(...LightsList);\n    dom.appendChild(this.renderer.domElement);\n    dom.appendChild(statsDom);\n    dom.appendChild(VRButton.createButton(this.renderer));\n  }\n\n  loadRoom() {\n    let cb = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : () => {};\n    //载入模型\n    const loader = new GLTFLoader();\n    loader.load('/mp5/scene.gltf', gltf => {\n      // this.mixer= new AnimationMixer(gltf.scene)\n      // var action=this.mixer.clipAction(gltf.animations[0])\n      // // action.timeScale=0.8\n      // action.time=4\n      gltf.scene.traverse(object => {\n        if (object.isMesh) {\n          // 修改模型的材质\n          object.castShadow = true;\n          object.frustumCulled = false; // object.receiveShadow = true;\n\n          object.material.emissive = object.material.color;\n          object.material.emissiveMap = object.material.map;\n        }\n      });\n      gltf.scene.receiveShadow = true;\n      this.model = gltf.scene;\n      this.scene.add(gltf.scene);\n      gltf.scene.position.set(0, 0, 0); // gltf.scene.scale.set(1, 10, 10)\n\n      cb();\n    }, () => {}, e => {\n      console.log(\"error\", e);\n    });\n  }\n\n  addObject() {\n    for (var _len = arguments.length, object = new Array(_len), _key = 0; _key < _len; _key++) {\n      object[_key] = arguments[_key];\n    }\n\n    object.forEach(elem => {\n      this.scene.add(elem);\n    });\n  }\n\n  disableControls() {\n    this.controls.enabled = false;\n  }\n\n  enableControls() {\n    this.controls.enabled = true;\n  }\n\n}","map":{"version":3,"names":["PerspectiveCamera","Scene","WebGLRenderer","Clock","Raycaster","PMREMGenerator","UnsignedByteType","LinearToneMapping","Stats","FirstPersonControls","GLTFLoader","RGBELoader","VRButton","LightsList","helperList","TEngine","constructor","dom","renderer","mixer","pmremGenerator","scene","raycaster","camera","clock","controls","model","heart","newEnterIndex","stats","antialias","xr","enabled","shadowMap","toneMapping","compileEquirectangularShader","setDataType","load","texture","envMap","fromEquirectangular","dispose","console","log","environment","background","e","offsetWidth","offsetHeight","lookAt","setSize","statsDom","domElement","style","position","top","right","left","lookSpeed","movementSpeed","constrainVertical","verticalMin","Math","PI","verticalMax","onWindowResize","aspect","window","innerWidth","innerHeight","updateProjectionMatrix","addEventListener","setAnimationLoop","update","getDelta","render","addObject","appendChild","createButton","loadRoom","cb","loader","gltf","traverse","object","isMesh","castShadow","frustumCulled","material","emissive","color","emissiveMap","map","receiveShadow","add","set","forEach","elem","disableControls","enableControls"],"sources":["/home/malf/code/game-demo/client/src/TEngine/TEngine.ts"],"sourcesContent":["import {\n  AmbientLight,\n  AxesHelper,\n  BoxBufferGeometry,\n  GridHelper,\n  RGBAFormat,\n  TextureLoader,\n  ObjectLoader,\n  DoubleSide,\n  Mesh,\n  MeshStandardMaterial,\n  PerspectiveCamera,\n  Scene,\n  Vector2,\n  Vector3,\n  WebGLRenderer,\n  MOUSE,\n  Object3D,\n  Group,\n  Clock,\n  Raycaster,\n  TetrahedronBufferGeometry,\n  VideoTexture,\n  PMREMGenerator,\n  UnsignedByteType,\n  HemisphereLight,\n  CanvasTexture,\n  AnimationMixer,\n  MeshBasicMaterial,\n  PlaneGeometry,\n  CineonToneMapping,\n  LinearToneMapping,\n  QuadraticBezierCurve3\n} from \"three\"\nimport Stats from 'three/examples/jsm/libs/stats.module'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\nimport { FirstPersonControls } from 'three/examples/jsm/controls/FirstPersonControls'\nimport { PointerLockControls } from 'three/examples/jsm/controls/PointerLockControls'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader';\nimport { VRButton } from 'three/examples/jsm/webxr/VRButton.js';\nimport { LightsList } from './Tlights'\nimport { helperList } from \"./THelper\"\nexport class TEngine {\n\n  private dom: HTMLElement\n  public renderer: WebGLRenderer\n  private mixer: AnimationMixer | undefined\n  private pmremGenerator!: PMREMGenerator\n  private scene: Scene\n  private raycaster:Raycaster\n  private camera: PerspectiveCamera\n  private clock: Clock\n  private controls!: FirstPersonControls | OrbitControls\n\n  private model!: Group\n  private heart!: Group\n  private newEnterIndex = 0\n  stats: Stats\n  constructor(dom: HTMLElement) {\n    this.dom = dom\n    this.renderer = new WebGLRenderer({\n      antialias: true\n    })\n    this.renderer.xr.enabled = true;\n    this.clock = new Clock()\n    this.renderer.shadowMap.enabled = true;\n    this.renderer.toneMapping = LinearToneMapping\n    this.scene = new Scene()\n    const pmremGenerator = new PMREMGenerator(this.renderer); // 使用hdr作为背景色\n    pmremGenerator.compileEquirectangularShader();\n    this.pmremGenerator = pmremGenerator;\n    const scene = this.scene;\n    \n    new RGBELoader()\n      .setDataType(UnsignedByteType)\n      .load('/texture/autumn_forest_04_1k.hdr', function (texture) {\n        return \n        const envMap = pmremGenerator.fromEquirectangular(texture).texture;\n\n        pmremGenerator.dispose();\n        console.log('here');\n        scene.environment = envMap; // 给场景添加环境光效果\n        scene.background = envMap; // 给场景添加背景图\n      }, () => { }, (e) => { console.log('error in load env_texture', e); });\n\n    this.camera = new PerspectiveCamera(60, dom.offsetWidth / dom.offsetHeight, 0.1, 1000)\n\n    this.camera.lookAt(1,0,0)\n\n    this.renderer.setSize(dom.offsetWidth, dom.offsetHeight, true)\n\n    // 初始性能监视器\n    const stats = Stats()\n    const statsDom = stats.domElement\n    this.stats = stats;\n    statsDom.style.position = 'fixed'\n    statsDom.style.top = '0'\n    statsDom.style.right = '5px'\n    statsDom.style.left = 'unset'\n\n\n\n    let controls;\n   \n      controls = new FirstPersonControls(this.camera, this.dom);\n      controls.lookSpeed = 0.2; //鼠标移动查看的速度\n      controls.movementSpeed = 20; //相机移动速度\n      // controls.noFly = true;\n      controls.constrainVertical = true; //约束垂直\n      controls.verticalMin = Math.PI / 2;\n\n      controls.verticalMax = Math.PI / 2 + 0.0000001;\n  \n\n    this.controls = controls\n\n\n   \n    const raycaster = new Raycaster();\n    this.raycaster=raycaster;\n    const onWindowResize = () => {\n\n      this.camera.aspect = window.innerWidth / window.innerHeight;\n      this.camera.updateProjectionMatrix();\n\n      this.renderer.setSize(dom.offsetWidth, dom.offsetHeight, true);\n\n    }\n    window.addEventListener('resize', onWindowResize);\n\n    this.renderer.setAnimationLoop(() => {\n     this.controls.update(this.clock.getDelta())\n      \n      this.renderer.render(this.scene, this.camera)\n      stats.update()\n    })\n\nthis.addObject(...helperList)\nthis.addObject(...LightsList)\n    dom.appendChild(this.renderer.domElement)\n    dom.appendChild(statsDom)\n    dom.appendChild(VRButton.createButton(this.renderer))\n  }\n\n  loadRoom(cb = () => { }) {\n    //载入模型\n    const loader: GLTFLoader = new GLTFLoader()\n\n    loader.load('/mp5/scene.gltf', (gltf) => {\n\n      // this.mixer= new AnimationMixer(gltf.scene)\n      // var action=this.mixer.clipAction(gltf.animations[0])\n      // // action.timeScale=0.8\n      // action.time=4\n      gltf.scene.traverse((object) => {\n        if ((object as Mesh).isMesh) {\n          // 修改模型的材质\n          object.castShadow = true;\n          object.frustumCulled = false;\n          // object.receiveShadow = true;\n\n          (object as any).material.emissive = (object as any).material.color;\n          (object as any).material.emissiveMap = (object as any).material.map;\n        }\n      })\n      gltf.scene.receiveShadow = true\n      this.model = gltf.scene\n      this.scene.add(gltf.scene)\n      gltf.scene.position.set(0, 0, 0)\n      // gltf.scene.scale.set(1, 10, 10)\n      cb();\n    }, () => { }, (e) => { console.log(\"error\", e) })\n\n  }\n  addObject(...object: Object3D[]) {\n    object.forEach(elem => {\n      this.scene.add(elem)\n    })\n  }\n\n  disableControls() {\n    this.controls.enabled = false\n  }\n  enableControls() {\n    this.controls.enabled = true\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}