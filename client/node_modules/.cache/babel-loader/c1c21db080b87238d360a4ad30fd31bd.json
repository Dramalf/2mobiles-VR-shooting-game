{"ast":null,"code":"class VRButton {\n  static createButton(renderer, options) {\n    if (options) {\n      console.error('THREE.VRButton: The \"options\" parameter has been removed. Please set the reference space type via renderer.xr.setReferenceSpaceType() instead.');\n    }\n\n    const button = document.createElement('button');\n\n    function\n      /*device*/\n    showEnterVR() {\n      let currentSession = null;\n\n      async function onSessionStarted(session) {\n        session.addEventListener('end', onSessionEnded);\n        await renderer.xr.setSession(session);\n        button.textContent = 'EXIT VR';\n        currentSession = session;\n      }\n\n      function\n        /*event*/\n      onSessionEnded() {\n        currentSession.removeEventListener('end', onSessionEnded);\n        button.textContent = 'ENTER VR';\n        currentSession = null;\n      } //\n\n\n      button.style.display = '';\n      button.style.cursor = 'pointer';\n      button.style.left = 'calc(50% - 50px)';\n      button.style.width = '100px';\n      button.textContent = 'ENTER VR';\n\n      button.onmouseenter = function () {\n        button.style.opacity = '1.0';\n      };\n\n      button.onmouseleave = function () {\n        button.style.opacity = '0.5';\n      };\n\n      button.onclick = function () {\n        if (currentSession === null) {\n          // WebXR's requestReferenceSpace only works if the corresponding feature\n          // was requested at session creation time. For simplicity, just ask for\n          // the interesting ones as optional features, but be aware that the\n          // requestReferenceSpace call will fail if it turns out to be unavailable.\n          // ('local' is always available for immersive sessions and doesn't need to\n          // be requested separately.)\n          const sessionInit = {\n            optionalFeatures: ['local-floor', 'bounded-floor', 'hand-tracking', 'layers']\n          };\n          navigator.xr.requestSession('immersive-vr', sessionInit).then(onSessionStarted);\n        } else {\n          currentSession.end();\n        }\n      };\n    }\n\n    function disableButton() {\n      button.style.display = '';\n      button.style.cursor = 'auto';\n      button.style.left = 'calc(50% - 75px)';\n      button.style.width = '150px';\n      button.onmouseenter = null;\n      button.onmouseleave = null;\n      button.onclick = null;\n    }\n\n    function showWebXRNotFound() {\n      disableButton();\n      button.textContent = 'VR NOT SUPPORTED';\n    }\n\n    function showVRNotAllowed(exception) {\n      disableButton();\n      console.warn('Exception when trying to call xr.isSessionSupported', exception);\n      button.textContent = 'VR NOT ALLOWED';\n    }\n\n    function stylizeElement(element) {\n      element.style.position = 'absolute';\n      element.style.bottom = '20px';\n      element.style.padding = '12px 6px';\n      element.style.border = '1px solid #fff';\n      element.style.borderRadius = '4px';\n      element.style.background = 'rgba(0,0,0,0.1)';\n      element.style.color = '#fff';\n      element.style.font = 'normal 13px sans-serif';\n      element.style.textAlign = 'center';\n      element.style.opacity = '0.5';\n      element.style.outline = 'none';\n      element.style.zIndex = '999';\n    }\n\n    if ('xr' in navigator) {\n      button.id = 'VRButton';\n      button.style.display = 'none';\n      stylizeElement(button);\n      navigator.xr.isSessionSupported('immersive-vr').then(function (supported) {\n        supported ? showEnterVR() : showWebXRNotFound();\n\n        if (supported && VRButton.xrSessionIsGranted) {\n          button.click();\n        }\n      }).catch(showVRNotAllowed);\n      return button;\n    } else {\n      const message = document.createElement('a');\n\n      if (window.isSecureContext === false) {\n        message.href = document.location.href.replace(/^http:/, 'https:');\n        message.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\n      } else {\n        message.href = 'https://immersiveweb.dev/';\n        message.innerHTML = 'WEBXR NOT AVAILABLE';\n      }\n\n      message.style.left = 'calc(50% - 90px)';\n      message.style.width = '180px';\n      message.style.textDecoration = 'none';\n      stylizeElement(message);\n      return message;\n    }\n  }\n\n  static xrSessionIsGranted = false;\n\n  static registerSessionGrantedListener() {\n    if ('xr' in navigator) {\n      // WebXRViewer (based on Firefox) has a bug where addEventListener\n      // throws a silent exception and aborts execution entirely.\n      if (/WebXRViewer\\//i.test(navigator.userAgent)) return;\n      navigator.xr.addEventListener('sessiongranted', () => {\n        VRButton.xrSessionIsGranted = true;\n      });\n    }\n  }\n\n}\n\nVRButton.registerSessionGrantedListener();\nexport { VRButton };","map":{"version":3,"names":["VRButton","createButton","renderer","options","console","error","button","document","createElement","showEnterVR","currentSession","onSessionStarted","session","addEventListener","onSessionEnded","xr","setSession","textContent","removeEventListener","style","display","cursor","left","width","onmouseenter","opacity","onmouseleave","onclick","sessionInit","optionalFeatures","navigator","requestSession","then","end","disableButton","showWebXRNotFound","showVRNotAllowed","exception","warn","stylizeElement","element","position","bottom","padding","border","borderRadius","background","color","font","textAlign","outline","zIndex","id","isSessionSupported","supported","xrSessionIsGranted","click","catch","message","window","isSecureContext","href","location","replace","innerHTML","textDecoration","registerSessionGrantedListener","test","userAgent"],"sources":["/home/malf/code/game-demo/client/node_modules/three/examples/jsm/webxr/VRButton.js"],"sourcesContent":["class VRButton {\n\n\tstatic createButton( renderer, options ) {\n\n\t\tif ( options ) {\n\n\t\t\tconsole.error( 'THREE.VRButton: The \"options\" parameter has been removed. Please set the reference space type via renderer.xr.setReferenceSpaceType() instead.' );\n\n\t\t}\n\n\t\tconst button = document.createElement( 'button' );\n\n\t\tfunction showEnterVR( /*device*/ ) {\n\n\t\t\tlet currentSession = null;\n\n\t\t\tasync function onSessionStarted( session ) {\n\n\t\t\t\tsession.addEventListener( 'end', onSessionEnded );\n\n\t\t\t\tawait renderer.xr.setSession( session );\n\t\t\t\tbutton.textContent = 'EXIT VR';\n\n\t\t\t\tcurrentSession = session;\n\n\t\t\t}\n\n\t\t\tfunction onSessionEnded( /*event*/ ) {\n\n\t\t\t\tcurrentSession.removeEventListener( 'end', onSessionEnded );\n\n\t\t\t\tbutton.textContent = 'ENTER VR';\n\n\t\t\t\tcurrentSession = null;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tbutton.style.display = '';\n\n\t\t\tbutton.style.cursor = 'pointer';\n\t\t\tbutton.style.left = 'calc(50% - 50px)';\n\t\t\tbutton.style.width = '100px';\n\n\t\t\tbutton.textContent = 'ENTER VR';\n\n\t\t\tbutton.onmouseenter = function () {\n\n\t\t\t\tbutton.style.opacity = '1.0';\n\n\t\t\t};\n\n\t\t\tbutton.onmouseleave = function () {\n\n\t\t\t\tbutton.style.opacity = '0.5';\n\n\t\t\t};\n\n\t\t\tbutton.onclick = function () {\n\n\t\t\t\tif ( currentSession === null ) {\n\n\t\t\t\t\t// WebXR's requestReferenceSpace only works if the corresponding feature\n\t\t\t\t\t// was requested at session creation time. For simplicity, just ask for\n\t\t\t\t\t// the interesting ones as optional features, but be aware that the\n\t\t\t\t\t// requestReferenceSpace call will fail if it turns out to be unavailable.\n\t\t\t\t\t// ('local' is always available for immersive sessions and doesn't need to\n\t\t\t\t\t// be requested separately.)\n\n\t\t\t\t\tconst sessionInit = { optionalFeatures: [ 'local-floor', 'bounded-floor', 'hand-tracking', 'layers' ] };\n\t\t\t\t\tnavigator.xr.requestSession( 'immersive-vr', sessionInit ).then( onSessionStarted );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcurrentSession.end();\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction disableButton() {\n\n\t\t\tbutton.style.display = '';\n\n\t\t\tbutton.style.cursor = 'auto';\n\t\t\tbutton.style.left = 'calc(50% - 75px)';\n\t\t\tbutton.style.width = '150px';\n\n\t\t\tbutton.onmouseenter = null;\n\t\t\tbutton.onmouseleave = null;\n\n\t\t\tbutton.onclick = null;\n\n\t\t}\n\n\t\tfunction showWebXRNotFound() {\n\n\t\t\tdisableButton();\n\n\t\t\tbutton.textContent = 'VR NOT SUPPORTED';\n\n\t\t}\n\n\t\tfunction showVRNotAllowed( exception ) {\n\n\t\t\tdisableButton();\n\n\t\t\tconsole.warn( 'Exception when trying to call xr.isSessionSupported', exception );\n\n\t\t\tbutton.textContent = 'VR NOT ALLOWED';\n\n\t\t}\n\n\t\tfunction stylizeElement( element ) {\n\n\t\t\telement.style.position = 'absolute';\n\t\t\telement.style.bottom = '20px';\n\t\t\telement.style.padding = '12px 6px';\n\t\t\telement.style.border = '1px solid #fff';\n\t\t\telement.style.borderRadius = '4px';\n\t\t\telement.style.background = 'rgba(0,0,0,0.1)';\n\t\t\telement.style.color = '#fff';\n\t\t\telement.style.font = 'normal 13px sans-serif';\n\t\t\telement.style.textAlign = 'center';\n\t\t\telement.style.opacity = '0.5';\n\t\t\telement.style.outline = 'none';\n\t\t\telement.style.zIndex = '999';\n\n\t\t}\n\n\t\tif ( 'xr' in navigator ) {\n\n\t\t\tbutton.id = 'VRButton';\n\t\t\tbutton.style.display = 'none';\n\n\t\t\tstylizeElement( button );\n\n\t\t\tnavigator.xr.isSessionSupported( 'immersive-vr' ).then( function ( supported ) {\n\n\t\t\t\tsupported ? showEnterVR() : showWebXRNotFound();\n\n\t\t\t\tif ( supported && VRButton.xrSessionIsGranted ) {\n\n\t\t\t\t\tbutton.click();\n\n\t\t\t\t}\n\n\t\t\t} ).catch( showVRNotAllowed );\n\n\t\t\treturn button;\n\n\t\t} else {\n\n\t\t\tconst message = document.createElement( 'a' );\n\n\t\t\tif ( window.isSecureContext === false ) {\n\n\t\t\t\tmessage.href = document.location.href.replace( /^http:/, 'https:' );\n\t\t\t\tmessage.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\n\n\t\t\t} else {\n\n\t\t\t\tmessage.href = 'https://immersiveweb.dev/';\n\t\t\t\tmessage.innerHTML = 'WEBXR NOT AVAILABLE';\n\n\t\t\t}\n\n\t\t\tmessage.style.left = 'calc(50% - 90px)';\n\t\t\tmessage.style.width = '180px';\n\t\t\tmessage.style.textDecoration = 'none';\n\n\t\t\tstylizeElement( message );\n\n\t\t\treturn message;\n\n\t\t}\n\n\t}\n\n\tstatic xrSessionIsGranted = false;\n\n\tstatic registerSessionGrantedListener() {\n\n\t\tif ( 'xr' in navigator ) {\n\n\t\t\t// WebXRViewer (based on Firefox) has a bug where addEventListener\n\t\t\t// throws a silent exception and aborts execution entirely.\n\t\t\tif ( /WebXRViewer\\//i.test( navigator.userAgent ) ) return;\n\n\t\t\tnavigator.xr.addEventListener( 'sessiongranted', () => {\n\n\t\t\t\tVRButton.xrSessionIsGranted = true;\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n}\n\nVRButton.registerSessionGrantedListener();\n\nexport { VRButton };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}