{"ast":null,"code":"import { PerspectiveCamera, Scene, Vector3, WebGLRenderer, MOUSE, Clock } from \"three\";\nimport Stats from 'three/examples/jsm/libs/stats.module';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nexport class TEngine {\n  constructor(dom) {\n    this.dom = void 0;\n    this.renderer = void 0;\n    this.mixer = void 0;\n    this.scene = void 0;\n    this.camera = void 0;\n    this.clock = void 0;\n    this.orbitControls = void 0;\n    this.model = void 0;\n    this.dom = dom;\n    this.renderer = new WebGLRenderer({\n      antialias: true\n    });\n    this.clock = new Clock();\n    this.renderer.shadowMap.enabled = true;\n    this.scene = new Scene();\n    this.camera = new PerspectiveCamera(45, dom.offsetWidth / dom.offsetHeight, 1, 1000);\n    this.camera.position.set(120, 120, 120);\n    this.camera.lookAt(new Vector3(0, 0, 0));\n    this.camera.up = new Vector3(0, 1, 0);\n    this.renderer.setSize(dom.offsetWidth, dom.offsetHeight, true); // 初始性能监视器\n\n    const stats = Stats();\n    const statsDom = stats.domElement;\n    statsDom.style.position = 'fixed';\n    statsDom.style.top = '0';\n    statsDom.style.right = '5px';\n    statsDom.style.left = 'unset'; // 初始orbitControls\n\n    const orbitControls = new OrbitControls(this.camera, this.renderer.domElement);\n    this.orbitControls = orbitControls;\n    orbitControls.mouseButtons = {\n      LEFT: null,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.ROTATE\n    }; //orbitControls.listenToKeyEvents( document.body ); // optional\n\n    const onWindowResize = () => {\n      this.camera.aspect = window.innerWidth / window.innerHeight;\n      this.camera.updateProjectionMatrix();\n      this.renderer.setSize(dom.offsetWidth, dom.offsetHeight, true);\n    };\n\n    window.addEventListener('resize', onWindowResize);\n\n    const renderFun = () => {\n      orbitControls.update();\n      this.renderer.render(this.scene, this.camera);\n      stats.update();\n      requestAnimationFrame(renderFun);\n    };\n\n    renderFun();\n    dom.appendChild(this.renderer.domElement);\n    dom.appendChild(statsDom);\n  }\n\n  loadModel() {\n    //载入模型\n    const loader = new GLTFLoader();\n    loader.load('/mp5/scene.gltf', gltf => {\n      console.log('here', gltf.animations);\n      gltf.scene.traverse(object => {\n        if (object.isMesh) {\n          // 修改模型的材质\n          object.castShadow = true;\n          object.receiveShadow = true;\n        }\n      });\n      gltf.scene.receiveShadow = true;\n      this.model = gltf.scene;\n      this.scene.add(gltf.scene);\n      gltf.scene.scale.set(1, 1, 1);\n    }, () => {}, e => {\n      console.log(\"error\", e);\n    });\n  }\n\n  addObject() {\n    for (var _len = arguments.length, object = new Array(_len), _key = 0; _key < _len; _key++) {\n      object[_key] = arguments[_key];\n    }\n\n    object.forEach(elem => {\n      this.scene.add(elem);\n    });\n  }\n\n}","map":{"version":3,"names":["PerspectiveCamera","Scene","Vector3","WebGLRenderer","MOUSE","Clock","Stats","OrbitControls","GLTFLoader","TEngine","constructor","dom","renderer","mixer","scene","camera","clock","orbitControls","model","antialias","shadowMap","enabled","offsetWidth","offsetHeight","position","set","lookAt","up","setSize","stats","statsDom","domElement","style","top","right","left","mouseButtons","LEFT","MIDDLE","DOLLY","RIGHT","ROTATE","onWindowResize","aspect","window","innerWidth","innerHeight","updateProjectionMatrix","addEventListener","renderFun","update","render","requestAnimationFrame","appendChild","loadModel","loader","load","gltf","console","log","animations","traverse","object","isMesh","castShadow","receiveShadow","add","scale","e","addObject","forEach","elem"],"sources":["/home/malf/code/game-demo/client/src/TEngine/TEngine.ts"],"sourcesContent":["import {\n  AmbientLight,\n  AxesHelper,\n  BoxBufferGeometry,\n  GridHelper,\n  Mesh,\n  MeshStandardMaterial,\n  PerspectiveCamera,\n  Scene,\n  Vector3,\n  WebGLRenderer,\n  MOUSE,\n  Object3D,\n  Group,\n  Clock,\n  TetrahedronBufferGeometry,\n  AnimationMixer\n} from \"three\"\n\nimport Stats from 'three/examples/jsm/libs/stats.module'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport { act } from \"@testing-library/react\"\n\n\nexport class TEngine {\n\n  private dom: HTMLElement\n  private renderer: WebGLRenderer\n  private mixer:AnimationMixer | undefined\n  private scene: Scene\n  private camera: PerspectiveCamera\n  private clock:Clock\n  private orbitControls: OrbitControls\n  private model!: Group\n  constructor(dom: HTMLElement) {\n    this.dom = dom\n    this.renderer = new WebGLRenderer({\n      antialias: true\n    })\n    this.clock = new Clock()\n    this.renderer.shadowMap.enabled = true\n\n    this.scene = new Scene()\n    this.camera = new PerspectiveCamera(45, dom.offsetWidth / dom.offsetHeight, 1, 1000)\n\n    this.camera.position.set(120, 120, 120)\n    this.camera.lookAt(new Vector3(0, 0, 0))\n    this.camera.up = new Vector3(0, 1, 0)\n\n\n    this.renderer.setSize(dom.offsetWidth, dom.offsetHeight, true)\n\n    // 初始性能监视器\n    const stats = Stats()\n    const statsDom = stats.domElement\n    statsDom.style.position = 'fixed'\n    statsDom.style.top = '0'\n    statsDom.style.right = '5px'\n    statsDom.style.left = 'unset'\n\n    // 初始orbitControls\n    const orbitControls: OrbitControls = new OrbitControls(this.camera, this.renderer.domElement)\n    this.orbitControls = orbitControls\n    orbitControls.mouseButtons = {\n      LEFT: null as unknown as MOUSE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.ROTATE\n    }\n\n\n    //orbitControls.listenToKeyEvents( document.body ); // optional\n\n\n\n    const onWindowResize = () => {\n\n      this.camera.aspect = window.innerWidth / window.innerHeight;\n      this.camera.updateProjectionMatrix();\n\n      this.renderer.setSize(dom.offsetWidth, dom.offsetHeight, true);\n\n    }\n    window.addEventListener('resize', onWindowResize);\n\n\n\n    const renderFun = () => {\n      orbitControls.update()\n\n      this.renderer.render(this.scene, this.camera)\n      stats.update()\n      requestAnimationFrame(renderFun)\n    }\n\n    renderFun()\n\n    dom.appendChild(this.renderer.domElement)\n    dom.appendChild(statsDom)\n  }\n  loadModel() {\n    //载入模型\n    const loader: GLTFLoader = new GLTFLoader()\n\n    loader.load('/mp5/scene.gltf', (gltf) => {\n      console.log('here',gltf.animations)\n      gltf.scene.traverse((object) => {\n        if ((object as THREE.Mesh).isMesh) {\n          // 修改模型的材质\n          object.castShadow = true\n          object.receiveShadow = true\n        }\n      })\n      gltf.scene.receiveShadow = true\n      this.model = gltf.scene\n      this.scene.add(gltf.scene)\n      gltf.scene.scale.set(1, 1, 1)\n    }, () => { }, (e) => { console.log(\"error\", e) })\n\n  }\n  addObject(...object: Object3D[]) {\n    object.forEach(elem => {\n      this.scene.add(elem)\n    })\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}